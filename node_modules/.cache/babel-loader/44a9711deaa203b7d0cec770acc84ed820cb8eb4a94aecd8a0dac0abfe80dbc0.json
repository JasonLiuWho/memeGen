{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\Desktop\\\\lessons2023\\\\react\\\\memeGen\\\\src\\\\components\\\\Meme.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport memeData from \"../memeData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Meme = () => {\n  _s();\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemes, setAllMemes] = useState({});\n  useEffect(() => {\n    console.log(\"Effect ran\");\n    axios.get(\"https://api.imgflip.com/get_memes\").then(data => {\n      setAllMemes(data.data);\n    });\n  }, []);\n\n  // console.log(allMemes)\n\n  const getMeme = () => {\n    const memes = allMeme.data.memes;\n    let idx = Math.floor(Math.random() * memes.length);\n\n    // console.log(memes[idx].url)\n\n    setMeme(prevState => ({\n      ...prevState,\n      randomImage: memes[idx].url\n    }));\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section meme-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form meme-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"topText\",\n              className: \"form-label\",\n              children: \"Top Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control text-1\",\n              id: \"topText\",\n              name: \"topText\",\n              value: meme.topText,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"bottomText\",\n              className: \"form-label\",\n              children: \"Bottom Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control text-2\",\n              id: \"bottomText\",\n              name: \"bottomText\",\n              value: meme.bottomText,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn submit-btn\",\n              type: \"button\",\n              onClick: getMeme,\n              children: \"Get a new meme image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meme-img-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: meme.randomImage,\n            alt: \"get meme image\",\n            className: \"img-fluid image d-block mx-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"meme-text top\",\n            children: meme.topText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"meme-text bottom\",\n            children: meme.bottomText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Meme, \"VG1FvoIH5N4XBD0N49yo4y9grs4=\");\n_c = Meme;\nexport default Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["useState","useEffect","axios","memeData","jsxDEV","_jsxDEV","Meme","_s","meme","setMeme","topText","bottomText","randomImage","allMemes","setAllMemes","console","log","get","then","data","getMeme","memes","allMeme","idx","Math","floor","random","length","prevState","url","handleChange","event","name","value","target","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/jason/OneDrive/Desktop/lessons2023/react/memeGen/src/components/Meme.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport memeData from \"../memeData\"\r\n\r\n\r\nconst Meme =()=> {\r\n\r\n    const [meme, setMeme] = useState ({\r\n        topText: \"\",\r\n        bottomText: \"\", \r\n        randomImage: \"http://i.imgflip.com/1bij.jpg\"\r\n    })\r\n    \r\n    const [allMemes, setAllMemes] = useState({})\r\n    \r\n    useEffect(()=> {\r\n        console.log(\"Effect ran\")\r\n        axios.get(\"https://api.imgflip.com/get_memes\")\r\n        .then(data => {\r\n            setAllMemes(data.data)\r\n        })\r\n}, [])\r\n    \r\n    // console.log(allMemes)\r\n\r\n    const getMeme =()=> {\r\n        const memes = allMeme.data.memes\r\n        let idx = Math.floor(Math.random() * memes.length)\r\n    \r\n        // console.log(memes[idx].url)\r\n\r\n        setMeme(prevState => ({\r\n            ...prevState,\r\n            randomImage: memes[idx].url\r\n        }))\r\n    }\r\n\r\n\r\n    const handleChange =(event)=> {\r\n        const { name, value } = event.target\r\n\r\n        setMeme(prevState => ({...prevState, [name]: value}))\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"section meme-section\">\r\n            <div className=\"container\">\r\n                <div className=\"form meme-form\">\r\n                    <div className=\" row\">\r\n                        <div className=\"col\">\r\n                            <label \r\n                                htmlFor=\"topText\" \r\n                                className=\"form-label\">Top Text</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control text-1\"\r\n                                id=\"topText\"\r\n                                name=\"topText\"\r\n                                value={meme.topText}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <label \r\n                                htmlFor=\"bottomText\"\r\n                                className=\"form-label\">Bottom Text</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control text-2\"\r\n                                id=\"bottomText\"\r\n                                name=\"bottomText\"\r\n                                value={meme.bottomText}\r\n                                onChange={handleChange}\r\n                                \r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"d-grid\">\r\n                            <button className=\"btn submit-btn\" type=\"button\" onClick={getMeme}>\r\n                                Get a new meme image\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"meme-img-div\">\r\n                        <img \r\n                            src={meme.randomImage} \r\n                            alt=\"get meme image\" \r\n                            className=\"img-fluid image d-block mx-auto\"/>\r\n                            <h2 className=\"meme-text top\">{meme.topText}</h2>\r\n                            <h2 className=\"meme-text bottom\">{meme.bottomText}</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default Meme"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}