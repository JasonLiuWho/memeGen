{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\Desktop\\\\lessons2023\\\\react\\\\memeGen\\\\src\\\\components\\\\Meme.js\";\nimport { useState } from \"react\";\nimport memeData from \"../memeData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Meme = () => {\n  var _s = $RefreshSig$();\n  const getMeme = () => {\n    _s();\n    const [meme, setMeme] = useState({\n      topText: \"\",\n      bottomText: \"\",\n      randomImage: \"h\"\n    });\n    const memes = memeData.data.memes;\n    let idx = Math.floor(Math.random() * memes.length);\n\n    // console.log(memes[idx].url)\n\n    setMeme(prevState => ({\n      ...prevState,\n      randomImage: memes[idx].url\n    }));\n  };\n  _s(getMeme, \"8qD/bnyHYJhKNWk2L8q5HSO7C6I=\");\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section meme-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form meme-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"topText\",\n              className: \"form-label\",\n              children: \"Top Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control text-1\",\n              id: \"topText\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"bottomText\",\n              className: \"form-label\",\n              children: \"Bottom Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control text-2\",\n              id: \"bottomText\",\n              type: \"d\",\n              name: \"botText\",\n              value: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn submit-btn\",\n              type: \"button\",\n              onClick: getMeme,\n              children: \"Get a new meme image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meme-img-div\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://via.placeholder.com/50x50\",\n            alt: \"placeholder img\",\n            className: \"img-fluid image rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_c = Meme;\nexport default Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["useState","memeData","jsxDEV","_jsxDEV","Meme","_s","$RefreshSig$","getMeme","meme","setMeme","topText","bottomText","randomImage","memes","data","idx","Math","floor","random","length","prevState","url","handleChange","event","name","value","target","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/jason/OneDrive/Desktop/lessons2023/react/memeGen/src/components/Meme.js"],"sourcesContent":["import { useState  } from \"react\"\r\nimport memeData from \"../memeData\"\r\n\r\nconst Meme =()=> {\r\n\r\n    const getMeme =()=> {\r\n\r\n        const [meme, setMeme] = useState ({\r\n            topText: \"\",\r\n            bottomText: \"\", \r\n            randomImage: \"h\"\r\n        })\r\n        \r\n        const memes = memeData.data.memes\r\n        let idx = Math.floor(Math.random() * memes.length)\r\n    \r\n        // console.log(memes[idx].url)\r\n\r\n        setMeme(prevState => ({\r\n            ...prevState,\r\n            randomImage: memes[idx].url\r\n        }))\r\n    }\r\n\r\n\r\n    const handleChange =(event)=> {\r\n        const { name, value } = event.target\r\n\r\n        setMeme(prevState => ({...prevState, [name]: value}))\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"section meme-section\">\r\n            <div className=\"container\">\r\n                <div className=\"form meme-form\">\r\n                    <div className=\" row\">\r\n                        <div className=\"col\">\r\n                            <label \r\n                                htmlFor=\"topText\" \r\n                                className=\"form-label\">Top Text</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control text-1\"\r\n                                id=\"topText\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <label \r\n                                htmlFor=\"bottomText\"\r\n                                className=\"form-label\">Bottom Text</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control text-2\"\r\n                                id=\"bottomText\"\r\n                                type=\"d\"\r\n                                name=\"botText\"\r\n                                value=\"\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"d-grid\">\r\n                            <button className=\"btn submit-btn\" type=\"button\" onClick={getMeme}>\r\n                                Get a new meme image\r\n                                </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"meme-img-div\">\r\n                        <img \r\n                            src=\"https://via.placeholder.com/50x50\" \r\n                            alt=\"placeholder img\" \r\n                            className=\"img-fluid image rounded\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default Meme"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}